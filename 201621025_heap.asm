.-----------------------MAKE ARR------------------
	LDA	ZEROIDX
	STA	INDEX
GETARR	LDX	INDEX
	LDA	ZEROIDX
	RD	STDIN
	COMP	SPACE
	JEQ	CURSPC
	COMP	EOFE
	JEQ	CUREOF. IF E
	J	CURNUM
	
CURSPC	LDA     INDEX
        ADD     THREE
	COMP	C22
	JGT	ERROR
        STA     INDEX
	LDA	SIZE
	ADD	ONE
	STA	SIZE
	J	GETARR

CURNUM	SUB	ZERO
	STA	TEMP
	LDA	ARR,X
	MUL	TEN
	ADD	TEMP
	STA	ARR,X
	COMP	C99999
	JGT	ERROR
	J	GETARR

CUREOF	RD	STDIN	;O
	COMP	EOFO
	JLT	ERROR
	JGT	ERROR
	RD	STDIN	;F
	JLT	ERROR
	JGT	ERROR

.--------------START HEAP SORTING-------------------------


.---------------MAKE HEAP-----------------------
	LDA	IDXI	;A=IDXI
	ADD	THREE	;IDXI의 시작1
	STA	IDXI	;IDXI 생성
FORIS	LDX	IDXI	;X=I
	LDA	ZEROIDX
	STA	CHILD
	LDA	IDXI
	STA	CHILD
	COMP	ZEROIDX
	JGT	INWHILE
	J	FORIM

INWHILE	LDA     ZEROIDX
        LDA     CHILD
        STA     CHT1
        DIV     THREE
        SUB     ONE
        DIV     TWO
        MUL     THREE
	STA	ROOT
	LDX	ROOT
	LDA	ARR,X
	LDX	CHILD
	COMP	ARR,X
	JEQ	JMPIF
	JGT	JMPIF
	LDX	ZEROIDX
	LDX	ROOT
	LDA	ZEROIDX
	STA	TEMP
	LDA	ARR,X
	STA	TEMP	.TEMP = ARR[ROOT]
	LDX	ZEROIDX
	LDX	CHILD
	LDA	ZEROIDX
	LDA	ARR,X
	LDX	ZEROIDX
	LDX	ROOT
	STA	ARR,X
	LDX	ZEROIDX
	LDA	ZEROIDX
	LDX	CHILD
	LDA	TEMP
	STA	ARR,X	
		
JMPIF	LDA	ZEROIDX
	LDA	ROOT
	STA	CHILD

FORIM	LDX	ZEROIDX
	LDA	IDXI
	ADD	THREE
	STA	IDXI
	COMP	INDEX
	JLT	FORIS
. --------------SWAP ROOT AND LAST ELEMENT
	LDA	ZEROIDX
	LDA	INDEX
	SUB	THREE
	STA	INDEX1
	STA	IDXJ
FORJS	LDX	ZEROIDX
	LDX	IDXJ
	LDA	ZEROIDX
	STA	TEMP
	LDA	ARR,X				.00612	001DD
	STA	TEMP
	LDX	ZEROIDX
	LDA	ARR,X
	LDX	IDXJ
	STA	ARR,X
	LDA	ZEROIDX
	LDX	ZEROIDX
	LDA	TEMP
	STA	ARR,X	.ARR[0] = TEMP
	
	J 	PRINT
.---------------MAKE HEAP AGAIN WITHOUT LAST ELEMENT
FORISP	LDA	ZEROIDX
	STA	IDXI	
	LDA	IDXI	;A=IDXI
	ADD	THREE	;IDXI의 시작1
	STA	IDXI	;IDXI 생성
	COMP	IDXJ
	JEQ	FORJM2
	JGT	FORJM2
FORIS2	LDX	IDXI	;X=I
	LDA	ZEROIDX
	STA	CHILD
	LDA	IDXI
	STA	CHILD
	COMP	ZEROIDX
	JGT	INWH2
	J	FORIM2

INWH2	LDA     ZEROIDX
        LDA     CHILD
        STA     CHT1
        DIV     THREE
        SUB     ONE
        DIV     TWO
        MUL     THREE
	STA	ROOT
	LDX	ROOT
	LDA	ARR,X
	LDX	CHILD
	COMP	ARR,X
	JEQ	JMPIF2
	JGT	JMPIF2
	LDX	ZEROIDX
	LDX	ROOT
	LDA	ZEROIDX
	STA	TEMP
	LDA	ARR,X
	STA	TEMP	.TEMP = ARR[ROOT]
	LDX	ZEROIDX
	LDX	CHILD
	LDA	ZEROIDX
	LDA	ARR,X
	LDX	ZEROIDX
	LDX	ROOT
	STA	ARR,X
	LDX	ZEROIDX
	LDA	ZEROIDX
	LDX	CHILD
	LDA	TEMP
	STA	ARR,X	
		
JMPIF2	LDA	ZEROIDX
	LDA	ROOT
	STA	CHILD

FORIM2	LDX	ZEROIDX
	LDA	IDXI
	ADD	THREE
	STA	IDXI
	COMP	IDXJ
	JLT	FORIS2
	
FORJM2	LDA	ZEROIDX
	LDA	IDXJ
	SUB	THREE
	STA	IDXJ
	COMP	ZEROIDX
	JEQ	FORJS
	JGT	FORJS
	
	J	FIN

	
	
	
	
	
	
	
.---------------PRINT-----------------------------

PRINT	LDX	ZEROIDX	.ONE ARR
	LDX	IDXP	
	LDA	ZEROIDX
	STA	OPTION
	STA	ORIGIN
	LDA	ARR,X

	COMP	C9999	.10000< 5
	JGT	J10000	
	COMP	C999	.1000< 4
	JGT	J1000
	COMP	C99	.100< 3
	JGT	J100
	COMP	C9	.10< 2
	JGT	J10
	
J1	ADD     ZERO
        WD      STDOUT

	LDA	SPACE
	WD	STDOUT

	LDA	IDXP
	ADD	THREE
	STA	IDXP
	COMP	INDEX
	JLT	PRINT
	LDA	ZEROIDX
	STA	IDXP
	LDA	ENTER
	WD	STDOUT
	
				
	J	FORISP	.BREAK!!!!!!!!!!!!!!!!!!!!!!!

J10000	STA	ORIGIN	
	DIV	C10000
	ADD	ZERO
	WD	STDOUT
	SUB	ZERO
	MUL	C10000
	STA	OPTION
	LDA	ORIGIN
	SUB	OPTION
	J	J1000
	
J1000	STA     ORIGIN
        DIV     C1000
        ADD     ZERO
        WD      STDOUT
        SUB     ZERO
        MUL     C1000
        STA     OPTION
        LDA     ORIGIN
        SUB     OPTION
        J       J100

J100	STA     ORIGIN
        DIV     C100
        ADD     ZERO
        WD      STDOUT
        SUB     ZERO
        MUL     C100
        STA     OPTION
        LDA     ORIGIN
        SUB     OPTION
        J       J10

J10	STA     ORIGIN
        DIV     C10
        ADD     ZERO
        WD      STDOUT
        SUB     ZERO
        MUL     C10
        STA     OPTION
        LDA     ORIGIN
        SUB     OPTION
        J       J1

END     LDA     ARR,X
       	J 	PRINT

.-----------------------ERROR---------------------------

ERROR   LDA     CHARE
        WD      STDOUT
        LDA     CHARN
        WD      STDOUT
        LDA     CHART
        WD      STDOUT
        LDA     CHARE
        WD      STDOUT
        LDA     CHARR
        WD      STDOUT
        LDA     SPACE
        WD      STDOUT
        LDA     CHARE
        WD      STDOUT
        LDA     CHARR
        WD      STDOUT
        WD      STDOUT
        LDA     CHARO
        WD      STDOUT
        LDA     CHARR
        WD      STDOUT
        J       STOP


FIN	J	STOP
STOP	J	STOP
				
.-----------------------DERECTIVE---------------------

STDIN   BYTE    0
STDOUT  BYTE    1
INDEX   RESW    1
INDEX1	RESW	1
IDXI	RESW	1
IDXJ	RESW	1
IDXK	RESW	1
IDXP	RESW	1
CHILD	RESW	1
CHT1	RESW	1
ROOT	RESW	1
PARENT	RESW	1
ARR	RESW    8
TEMP	RESW	1
ORIGIN	RESW	1
OPTION	RESW	1
SIZE	RESW	1
SPACE   WORD    0x20
ZERO    WORD    0x30
EOFE	WORD	0x45
EOFO	WORD	0x4F
EOFF	WORD	0x46
ENTER	WORD	10
ZEROIDX	WORD	0
ONE	WORD	1
TWO	WORD	2
THREE   WORD    3
TEN	WORD	10
C22	WORD	25
C10000	WORD	10000
C1000	WORD	1000
C100	WORD	100
C10	WORD	10
C9999	WORD	9999
C999	WORD	999
C99	WORD	99
C9	WORD	9
C99999	WORD	99999
CHARE	WORD	0x65
CHARR	WORD	0x72
CHARO	WORD	0x6F
CHART   WORD    0x74
CHARN   WORD    0x6E

